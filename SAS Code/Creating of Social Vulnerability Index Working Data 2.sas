libname DATA 'C:\NHANES\DATA';
libname WORKING 'C:\NHANES\WORKING DATA';

***New SVI working data to create a new Social Vulnaerabilty Index per individual - retained Variables and Sorted by Sequence Number***;
data demo_i; set data.demo_i;
keep SEQN SDDSRVYR WTINT2YR SDMVPSU SDMVSTRA RIDSTATR DMDHREDU DMDHHSZE DMDHHSZA DMDHHSZB DMDMARTL RIDRETH3 DMDHHSIZ SIALANG RIDAGEYR;
proc sort; by seqn;
run;
data hiq_i; set data.hiq_i;
keep SEQN HIQ011;
proc sort; by seqn;
run;
data hoq_i; set data.hoq_i;
keep SEQN HOD050 HOQO65;
proc sort; by seqn;
run;
data inq_i; set data.inq_i;
keep SEQN INDFMMPC INQ060;
proc sort; by seqn;
run;
data dlq_i; set data.dlq_i;
keep SEQN DLQ010 DLQ020 DLQ040 DLQ050 DLQ060;
proc sort; by seqn;
run;
data acq_i; set data.acq_i;
keep SEQN ACD011A ACD011B ACD011C ACD040 ACD110;
proc sort; by seqn;
run;
data pah_i; set data.pah_i;
keep SEQN WTSA2YR;
run;
proc sort; by seqn;
run;

*Merge Files related to SVI 2015-2016;

data workdatasvi; merge pah_i demo_i inq_i hiq_i dlq_i acq_i hoq_i; by seqn; run;


***RECODE AND CLEAN DATA***;

***PovertyRatio***;
data workdatasvi; set workdatasvi;
if INDFMMPC=1 then PovertyRatio=1;
if INDFMMPC=2 then PovertyRatio=1;
if INDFMMPC=3 then PovertyRatio=0;
if INDFMMPC=7 then PovertyRatio=.;
if INDFMMPC=9 then PovertyRatio=.;
if INDFMMPC=. then PovertyRatio=.;

*check to see if recoding worked correctly* 
proc freq; *tables INDFMMPC*PovertyRatio/list;
run;


***Race***;
data workdatasvi; set workdatasvi;
*check to make sure sample of each category is enough;* proc freq; *tables RIDRETH3;
 if RIDRETH3=1 then race=1;
 if RIDRETH3=2 then race=1;
 if RIDRETH3=3 then race=0;
 if RIDRETH3=4 then race=1;
 if RIDRETH3=6 then race=1;
 if RIDRETH3=7 then race=1;
 if RIDRETH3=. then race=.;
 run;

proc freq; tables RIDRETH3*race/list;
run; 


***Housing Cost Burden***;
data workdatasvi; set workdatasvi;
if HOQO65=1 then HousingCost=0;
if HOQO65=2 then HousingCost=1;
if HOQO65=3 then HousingCost=0;
if HOQO65=7 then HousingCost=.;
if HOQO65=9 then HousingCost=.;
if HOQO65=. then HousingCost=.;

***HSDiploma***;
data workdatasvi; set workdatasvi;
 if DMDHREDU=1 then HSDiploma=1;
 if DMDHREDU=2 then HSDiploma=1;
 if DMDHREDU=3 then HSDiploma=0;
 if DMDHREDU=4 then HSDiploma=0;
 if DMDHREDU=5 then HSDiploma=0;
 if DMDHREDU=7 then HSDiploma=.;
 if DMDHREDU=9 then HSDiploma=.;
 if DMDHREDU=. then HSDiploma=.;
 run;

***Health Insurance***;

data workdatasvi; set workdatasvi;
if HIQ011=7 then insurance=.;
if HIQ011=9 then insurance=.;
if HIQ011=1 then insurance=0;
if HIQ011=2 then insurance=1;
if HIQ011=. then insurance=.;
proc freq; tables HIQ011*insurance/list;
run;

***Age 60 or older***;
data workdatasvi; set workdatasvi;
if DMDHHSZE=0 then elderly=0;
if DMDHHSZE=1 then elderly=1;
if DMDHHSZE=2 then elderly=2;
if DMDHHSZE=3 then elderly=3;
if DMDHHSZE=. then elderly=.;
run;

proc freq; tables DMDHHSZE*elderly/list;
run;

***Age 5 and younger***;
data workdatasvi; set workdatasvi;
if DMDHHSZA=0 then child=0;
if DMDHHSZA=1 then child=1;
if DMDHHSZA=2 then child=2;
if DMDHHSZA=3 then child=3;
if DMDHHSZA=. then child=.;
run;
proc freq; tables DMDHHSZA*child/list;
run;

***Age 6-17***;
data workdatasvi; set workdatasvi;
if DMDHHSZB=0 then adolescent=0;
if DMDHHSZB=1 then adolescent=1;
if DMDHHSZB=2 then adolescent=2;
if DMDHHSZB=3 then adolescent=3;
if DMDHHSZB=4 then adolescent=4;
if DMDHHSZB=. then adolescent=.;
run;

proc freq; tables DMDHHSZB*adolescent/list;
run;

***create new variable so that we can capture all 17 and under in a HH***;
data workdatasvi; set workdatasvi;
if adolescent=0 and child=0 then children=0;
if adolescent=. or child=. then children=.;
if adolescent>0 or child>0 then children= adolescent + child;
proc freq; tables children; run;

***Hearing Disability***;
data workdatasvi; set workdatasvi;
if DLQ010 in (7 9) then hearing=.;
if DLQ010=. then hearing=.;
if DLQ010=1 then hearing=1;
if DLQ010=2 then hearing=0;
run;
proc freq; tables DLQ010*hearing/list;
run;

***Sight Disability***;
data workdatasvi; set workdatasvi;
if DLQ020 in (7 9) then sight=.;
if DLQ020=. then sight=.;
if DLQ020=1 then sight=1;
if DLQ020=2 then sight=0;
run;
proc freq; tables DLQ020*sight/list;
run;

***Concentration Disability***;
data workdatasvi; set workdatasvi;
if DLQ040 in (7 9) then concentrate=.;
if DLQ040=. then concentrate=.;
if DLQ040=1 then concentrate=1;
if DLQ040=2 then concentrate=0;
run;
proc freq; tables DLQ040*concentrate/list;
run;

***Walking Disability***;
data workdatasvi; set workdatasvi;
if DLQ050 in (7 9) then walking=.;
if DLQ050=. then walking=.;
if DLQ050=1 then walking=1;
if DLQ050=2 then walking=0;
run;
proc freq; tables DLQ050*walking/list;
run;

***Bathing Disability***;
data workdatasvi; set workdatasvi;
if DLQ060 in (7 9) then bathing=.;
if DLQ060=. then bathing=.;
if DLQ060=1 then bathing=1;
if DLQ060=2 then bathing=0;
run;
proc freq; tables DLQ060*bathing/list;
run;

***Disability Pension***;
data workdatasvi; set workdatasvi;
if INQ060 in (7 9) then pension=.;
if INQ060=. then pension=.;
if INQ060=1 then pension=1;
if INQ060=2 then pension=0;
run;
proc freq; tables INQ060*pension/list;
run;

***create final disability variable***;
data workdatasvi; set workdatasvi;
if hearing=0 and sight=0 and concentrate=0 and walking=0 and bathing=0 and pension=0 then disability=0;
if hearing>0 or sight>0 or concentrate>0 or walking>0 or bathing>0 or pension>0 then disability=1;
proc freq; tables disability; run;


***Sing-Parent Household***;
data workdatasvi; set workdatasvi;
if DMDMARTL in (77 99) then married=.;
if DMDMARTL=1 then married=0;
if DMDMARTL=2 then married=1;
if DMDMARTL=3 then married=1;
if DMDMARTL=4 then married=1;
if DMDMARTL=5 then married=1;
if DMDMARTL=6 then married=0;
if DMDMARTL=. then married=.;
proc freq; tables DMDMARTL*married/list;
run;

*** Start English Language Proficiency ***
*** NHWhite or NH Black including Other***;
data workdatasvi; set workdatasvi;
if ACD011A in (77 99) then language1=.;
if ACD011A=1 then language1=0;
proc freq; tables ACD011A*language1/list;
run;

*** NH White or NH Black including Other***;
data workdatasvi; set workdatasvi;
if ACD011B=8 then language2=1;
if ACD011B=. then language2=.;
run;

*** NH White or NH Black including Other***;
data workdatasvi; set workdatasvi;
if ACD011C=9 then language3=1;
if ACD011C=. then language3=.;
run;

*** Mexican American or Other Hisp***;
data workdatasvi; set workdatasvi;
if ACD040 in (7 9) then language4=.;
if ACD040=1 then language4=1;
if ACD040=2 then language4=1;
if ACD040=3 then language4=0;
if ACD040=4 then language4=0;
if ACD040=5 then language4=0;
if ACD040=6 then language4=0;
if ACD040=. then language4=.;
proc freq; tables language4; run;
run;


*** Non-Hispanic Asian***;
data workdatasvi; set workdatasvi;
if ACD110 in (7 9) then language4=.;
if ACD110=1 then language5=1;
if ACD110=2 then language5=1;
if ACD110=3 then language5=0;
if ACD110=4 then language5=0;
if ACD110=5 then language5=0;
if ACD110=6 then language5=0;
if ACD110=. then language5=.;
run;

***create final language variable***;
data workdatasvi; set workdatasvi;
if language1=0 then languageprof=0;
else if language2=1 or language3=1 or language4=1 or language5=1 then langaugeprof=1;
proc freq; tables languageprof; run;

***alternative language variable***;
data workdatasvi; set workdatasvi;
if SIALANG=1 then languageprofalt=0;
if SIALANG=2 then languageprofalt=1;
if SIALANG=. then languageprofalt=.;
proc freq; tables languageprofalt; run;
run;


***start on crowding variable***
***create final variable for crowding as a function of rooms/people***;


***Number of Rooms in the Home***;
data workdatasvi; set workdatasvi;
if HOD050 in (777 999) then rooms=.;
if HOD050=1 then rooms=1;
if HOD050=2 then rooms=2;
if HOD050=3 then rooms=3;
if HOD050=4 then rooms=4;
if HOD050=5 then rooms=5;
if HOD050=6 then rooms=6;
if HOD050=7 then rooms=7;
if HOD050=8 then rooms=8;
if HOD050=9 then rooms=9;
if HOD050=10 then rooms=10;
if HOD050=11 then rooms=11;
if HOD050=12 then rooms=12;
if HOD050=12 then rooms=13;
if HOD050=. then rooms=.;
run;
proc freq; tables rooms; run;

***Number of people in the Home***;
data workdatasvi; set workdatasvi;
if DMDHHSIZ=1 then peopleHH=1;
if DMDHHSIZ=2 then peopleHH=2;
if DMDHHSIZ=3 then peopleHH=3;
if DMDHHSIZ=4 then peopleHH=4;
if DMDHHSIZ=5 then peopleHH=5;
if DMDHHSIZ=6 then peopleHH=6;
if DMDHHSIZ=7 then peopleHH=7;
if DMDHHSIZ=. then peopleHH=.;
run;
proc freq; tables peopleHH; run;

data workdatasvi; 
	set workdatasvi;
crowding=(rooms / peopleHH);
run;

data workdatasvi; 
	set workdatasvi;
if crowding<=1.0 then crowdingfinal=1;
if crowding=. then crowdingfinal=.;
else crowdingfinal=0;
run;
proc freq; tables crowdingfinal; run;

*data workdatasvi;
*set workdatasvi;
*if PovertyRatio=0 and HSDiploma=0 and insurance=0 and elderly=0 and children=0 and disability=0 and married=0 and languageprofalt=0 and race=0 and crowdingfinal=0 then svi=0;
*else if PovertyRatio=. or HSDiploma=. or insurance=. or elderly=. or children=. or disability=. or married=. or languageprofalt=. or race=. or crowdingfinal=. then svi=.;
*else svi= PovertyRatio + HSDiploma + insurance + elderly + children + disability + married + languageprofalt + race + crowdingfinal;
*run;
*proc freq; *tables svi; *run;


data workdatasvi;
set workdatasvi;
svi= PovertyRatio + HSDiploma + insurance + elderly + children + disability + languageprofalt + race + crowdingfinal;
run;
proc freq; tables svi; run;


***Save SVI variables dataset to the hard drive***;
libname WORKING 'C:\NHANES\WORKING DATA';
data working.SVI; set workdatasvi; run;

proc contents data=working.SVI; run;

proc univariate data=working.SVI;
var rooms peopleHH crowding;
histogram;
run;


proc univariate data=working.SVI;
var svi;
histogram;
run;

proc means data = working.svi n nmiss;
  *var _numeric_;
  where ridageyr >=6 and ridageyr <=19 and WTSA2YR > 0;
RUN ;
